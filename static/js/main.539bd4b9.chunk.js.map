{"version":3,"sources":["engine.js","synth.js","StartHeader.jsx","App.jsx","QuestionsForm.jsx","ChoiceFeedback.jsx","EndFeedbackWithStats.jsx","serviceWorker.js","index.js"],"names":["audio","Synth","this","context","window","AudioContext","webkitAudioContext","oscillator","createOscillator","gainNode","createGain","connect","destination","value","init","frequency","setValueAtTime","currentTime","gain","start","stop","SCALES","MAJOR","transposedNote","note","octaveFromCentral","noteInHertz","Number","Math","pow","toFixed","initEngine","createIntervalQuestion","tonic","direction","randomNumber","octave","createTonic","interval","number","scale","target","intervalSum","reduce","sum","jumps","idx","intervalNote","transDir","intervalNumberAdjustments","createInterval","max","floor","random","playIntervalQuestion","intervalQuestion","a","timePerNote","playNote","time","play","Promise","resolve","setTimeout","collectStats","game","defaults","totalQuestions","totalIncorrect","totalCorrect","sumTimeToHit","slowerHit","fasterHit","avgHit","date","totalTime","end","questions","length","reverse","savedStats","JSON","parse","localStorage","getItem","recordStats","acc","stat","gameStats","question","choice","setItem","stringify","historicalStats","isRecord","lastRecord","decorateStatsWithRecords","formatTime","ms","seconds","addQuestion","setGameState","newQuestion","unshift","hasPlayed","Date","now","nextQuestionTimeout","StartHeader","className","onClick","QuestionsForm","answer","nextQuestion","disabled","ChoiceFeedback","isChoiceCorrect","EndFeedbackWithStats","stats","StatWithRecord","props","Intl","DateTimeFormat","format","App","useState","setStatsState","gameProps","hasGameStarted","hasGameEnded","undefined","hasMadeChoice","getGameProps","resetGame","newGame","clearTimeout","element","isDuringQuestion","shift","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.539bd4b9.chunk.js","sourcesContent":["/*\n * References:\n * - https://medium.com/swinginc/playing-with-midi-in-javascript-b6999f2913c3\n * - https://calculla.com/calculators/table/note_frequencies\n */\n\nimport { Synth } from './synth';\n\nlet audio;\n\nexport const NOTES = {\n  A: 0,\n  Bb: 1,\n  B: 2,\n  C: 3,\n  Db: 4,\n  D: 5,\n  Eb: 6,\n  E: 7,\n  F: 8,\n  Gb: 9,\n  G: 10,\n  Ab: 11,\n};\n\nexport const SCALES = {\n  MAJOR: [2, 2, 1, 2, 2, 2, 1],\n};\n\nexport function transposedNote(note, octaveFromCentral = 0) {\n  return note + octaveFromCentral * 12;\n}\n\nexport function intervalNote(interval, note, scale = SCALES.MAJOR) {\n  // 0 based index - interval ones is internally 0\n  const target = interval - 1;\n\n  // since 0 is the 1st interval, it means it's the same note\n  if (target < 0) return note;\n\n  // find the note given an interval, based in how many steps/jumps are necessary\n  const intervalSum = scale.reduce((sum, jumps, idx) => (idx > target ? sum : sum + jumps), 0);\n  return note + intervalSum;\n}\n\nexport function noteInHertz(note) {\n  return Number((Math.pow(2, note / 12) * 440).toFixed(2));\n}\n\nexport function initEngine() {\n  audio = new Synth();\n}\n\nexport function createIntervalQuestion() {\n  const createTonic = () => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(2) * direction;\n    const noteNumber = randomNumber(11); // 12 possible notes\n    const note = transposedNote(noteNumber, octave);\n    return { note, octave };\n  };\n\n  const createInterval = tonic => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(2) * direction;\n    let number = randomNumber(7); // 8 possible intervals to go from one octave to another\n    const note = transposedNote(intervalNote(number, tonic.note), octave);\n    number = intervalNumberAdjustments(note, tonic, octave, number);\n\n    return { number, note, octave };\n  };\n\n  const tonic = createTonic();\n  const interval = createInterval(tonic);\n  return { tonic, interval };\n}\n\nfunction randomNumber(max) {\n  return Math.floor(Math.random() * Math.floor(max + 1));\n}\n\nfunction intervalNumberAdjustments(note, tonic, octave, number) {\n  const isSameButInAnotherOctave = (note - tonic.note) % 12 === 0;\n\n  if (isSameButInAnotherOctave) {\n    const transDir = octave - tonic.octave;\n\n    if (transDir > 0) number = 7;\n    if (transDir < 0) number = 0;\n  }\n\n  if (note === tonic.note) {\n    number = 0;\n  }\n\n  return number;\n}\n\nexport async function playIntervalQuestion(intervalQuestion, timePerNote = 750) {\n  const { tonic, interval } = intervalQuestion;\n  await playNote(tonic.note, timePerNote);\n  await playNote(interval.note, timePerNote);\n}\n\nasync function playNote(note, time) {\n  audio.play(noteInHertz(note));\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      audio.stop();\n      resolve();\n    }, time);\n  });\n}\n\n// TODO: Tests on all new functions below\n\n\nexport function collectStats(game) {\n  const defaults = {\n    totalQuestions: 0,\n    totalIncorrect: 0,\n    totalCorrect: 0,\n    sumTimeToHit: 0,\n    slowerHit: {},\n    fasterHit: {},\n    avgHit: {},\n    date: game.start,\n    totalTime: game.end - game.start,\n  };\n\n  if (game.questions.length < 1) return defaults;\n\n  // We need to revert the array before collecting stats (we\n  // stacked items on top, so we could easily access the last\n  // inserted question through index 0)\n  const questions = game.questions.reverse();\n\n  const savedStats = JSON.parse(localStorage.getItem('stats')) || [];\n\n  const recordStats = aggregateRecords(savedStats);\n\n  const gameStats = questions.reduce((acc, question) => {\n    acc.totalQuestions++;\n\n    if (question.choice !== question.interval.number) {\n      acc.totalIncorrect++;\n      return acc;\n    }\n\n    acc.totalCorrect++;\n\n    const time = question.end - question.start;\n    acc.sumTimeToHit = acc.sumTimeToHit + time;\n\n    const fasterHit = acc.fasterHit && acc.fasterHit.end - acc.fasterHit.start;\n    const slowerHit = acc.slowerHit && acc.slowerHit.end - acc.slowerHit.start;\n\n    if (!fasterHit || time < fasterHit) acc.fasterHit = { ...question, time };\n    if (!slowerHit || time > slowerHit) acc.slowerHit = { ...question, time };\n\n    return acc;\n  }, defaults);\n\n  gameStats.avgHit = {\n    time: gameStats.totalCorrect && gameStats.sumTimeToHit / gameStats.totalCorrect,\n    start: game.start\n  };\n\n  localStorage.setItem('stats', JSON.stringify([...savedStats, gameStats]));\n\n  decorateStatsWithRecords(gameStats, recordStats);\n\n  return gameStats;\n}\n\nfunction aggregateRecords(stats) {\n  return stats.reduce((acc, stat) => {\n    debugger;\n    if (!acc.avgHit || stat.avgHit?.time < acc.avgHit?.time) acc.avgHit = stat.avgHit;\n    if (!acc.fasterHit || stat.fasterHit?.time < acc.fasterHit?.time) acc.fasterHit = stat.fasterHit;\n    if (!acc.slowerHit || stat.slowerHit?.time > acc.slowerHit?.time) acc.slowerHit = stat.slowerHit;\n    return acc;\n  }, {});\n}\n\nfunction decorateStatsWithRecords(gameStats, historicalStats) {\n  gameStats.avgHit.isRecord = gameStats.avgHit?.time < historicalStats.avgHit?.time;\n  gameStats.avgHit.lastRecord = historicalStats.avgHit;\n\n  gameStats.fasterHit.isRecord = gameStats.fasterHit?.time < historicalStats.fasterHit?.time;\n  gameStats.fasterHit.lastRecord = historicalStats.fasterHit;\n\n  gameStats.slowerHit.isRecord = gameStats.slowerHit?.time > historicalStats.slowerHit?.time;\n  gameStats.slowerHit.lastRecord = historicalStats.slowerHit;\n}\n\nexport function formatTime(ms) {\n  if (!ms) return '???';\n  const seconds = (ms / 1000).toFixed(2);\n  return `${seconds}s`;\n}\n\nexport function getGameProps(game) {\n  const hasGameStarted = !!game.start;\n  const hasGameEnded = !!game.end;\n\n  const questions = game.questions;\n  const question = questions && questions.length > 0 ? questions[0] : undefined;\n  const choice = question?.choice;\n  const hasMadeChoice = choice !== undefined;\n  const isChoiceCorrect = choice === question?.interval?.number;\n  return {\n    hasGameStarted,\n    hasGameEnded,\n    questions,\n    question,\n    hasMadeChoice,\n    isChoiceCorrect,\n  };\n}\n\nexport async function addQuestion(game, setGameState) {\n  const newQuestion = createIntervalQuestion();\n  game.questions.unshift(newQuestion);\n  setGameState({ ...game });\n\n  await playIntervalQuestion(game.questions[0]);\n\n  game.questions[0].hasPlayed = true;\n  game.questions[0].start = Date.now();\n  setGameState({ ...game });\n}\n","export class Synth {\n  constructor() {\n    this.context = new (window.AudioContext || window.webkitAudioContext)();\n  }\n\n  init() {\n    this.oscillator = this.context.createOscillator();\n    this.gainNode = this.context.createGain();\n\n    this.oscillator.connect(this.gainNode);\n    this.gainNode.connect(this.context.destination);\n  }\n\n  play(value) {\n    this.init();\n\n    this.oscillator.frequency.setValueAtTime(value, this.context.currentTime);\n    this.gainNode.gain.setValueAtTime(1, this.context.currentTime);\n\n    this.oscillator.start();\n  }\n\n  stop() {\n    this.gainNode.gain.setValueAtTime(0, this.context.currentTime);\n    this.oscillator.stop(this.context.currentTime + 1);\n  }\n}\n","import React from 'react';\n\nexport const StartHeader = ({ start }) => (\n  <section className=\"start\">\n    {/* eslint-disable-next-line */}\n    <header>Ear Trainer 🎼</header>\n    <button onClick={start}>Press to START!</button>\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.css';\nimport { addQuestion, collectStats, getGameProps, initEngine } from './engine.js';\nimport { StartHeader } from './StartHeader';\nimport { QuestionsForm } from './QuestionsForm';\nimport { ChoiceFeedback } from './ChoiceFeedback';\nimport { EndFeedbackWithStats } from './EndFeedbackWithStats';\n\nlet nextQuestionTimeout;\n\nfunction App() {\n  const [game, setGameState] = useState({});\n  const [stats, setStatsState] = useState({});\n  const gameProps = getGameProps(game);\n\n  const { hasGameStarted, hasGameEnded, question, hasMadeChoice, isChoiceCorrect } = gameProps;\n\n  function render() {\n    return (\n      <div className=\"app\">\n        {!hasGameStarted && <StartHeader {...{ start }} />}\n\n        {hasGameStarted && !hasMadeChoice && <QuestionsForm {...{ answer, question, nextQuestion, end }} />}\n\n        {hasGameStarted && hasMadeChoice && <ChoiceFeedback {...{ isChoiceCorrect, question, nextQuestion, end }} />}\n\n        {hasGameEnded && <EndFeedbackWithStats {...{ stats }} />}\n      </div>\n    );\n  }\n\n  function resetGame() {\n    return {\n      start: Date.now(),\n      questions: [],\n      end: undefined,\n    };\n  }\n\n  async function start() {\n    initEngine();\n    const newGame = resetGame();\n    await addQuestion(newGame, setGameState);\n  }\n\n  async function nextQuestion() {\n    clearTimeout(nextQuestionTimeout);\n    await addQuestion(game, setGameState);\n  }\n\n  function answer(element) {\n    game.questions[0].choice = Number(element.target.value);\n    game.questions[0].end = Date.now();\n    setGameState({ ...game });\n\n    nextQuestionTimeout = setTimeout(nextQuestion, 3000);\n  }\n\n  function end(isDuringQuestion = true) {\n    clearTimeout(nextQuestionTimeout);\n\n    if (isDuringQuestion) {\n      game.questions.shift();\n    }\n\n    game.end = Date.now();\n    const stats = collectStats(game);\n    setStatsState(stats);\n\n    game.start = undefined;\n    setGameState({ ...game });\n  }\n\n  return render();\n}\n\nexport default App;\n","import { playIntervalQuestion } from './engine';\nimport React from 'react';\n\nexport const QuestionsForm = ({ answer, question, nextQuestion, end }) => (\n  <section className=\"question\">\n    <header>What is the interval?</header>\n\n    <section className=\"choice\">\n      <button value={0} onClick={answer} disabled={!question.hasPlayed}>\n        1\n      </button>\n      <button value={1} onClick={answer} disabled={!question.hasPlayed}>\n        2\n      </button>\n      <button value={2} onClick={answer} disabled={!question.hasPlayed}>\n        3\n      </button>\n      <button value={3} onClick={answer} disabled={!question.hasPlayed}>\n        4\n      </button>\n      <button value={4} onClick={answer} disabled={!question.hasPlayed}>\n        5\n      </button>\n      <button value={5} onClick={answer} disabled={!question.hasPlayed}>\n        6\n      </button>\n      <button value={6} onClick={answer} disabled={!question.hasPlayed}>\n        7\n      </button>\n      <button value={7} onClick={answer} disabled={!question.hasPlayed}>\n        8\n      </button>\n    </section>\n\n    <section className=\"other-actions\">\n      <button onClick={() => playIntervalQuestion(question)} disabled={!question.hasPlayed}>\n        Re-play\n      </button>\n\n      <button onClick={nextQuestion} disabled={!question.hasPlayed}>\n        Next!\n      </button>\n\n      <button onClick={end} disabled={!question.hasPlayed}>\n        I'm done... Stats!\n      </button>\n    </section>\n  </section>\n);\n","import React from 'react';\n\nexport const ChoiceFeedback = ({ isChoiceCorrect, question, nextQuestion, end }) => (\n  <section className=\"choice-feedback\">\n    <p>{isChoiceCorrect ? 'CORRECT! 🎉' : 'Incorrect... 😨'}</p>\n\n    {!isChoiceCorrect && (\n      <p>\n        You chose {question.choice + 1} but the write interval is <strong>{question.interval.number + 1}</strong>\n      </p>\n    )}\n\n    <p>\n      <strong>But what about this one?</strong>\n    </p>\n\n    <p>\n      <button onClick={nextQuestion}>Next, pls!</button>\n    </p>\n\n    <p>\n      <button onClick={() => end(false)}>I'm done... Stats!</button>\n    </p>\n  </section>\n);\n","import {formatTime} from './engine';\nimport React from 'react';\n\nexport const EndFeedbackWithStats = ({stats}) => (\n  <section className=\"end\">\n    <div className=\"stats\">\n      {stats.totalQuestions > 0 && (\n        <>\n          <table>\n            <tbody>\n            <tr>\n              <td>\n                <strong>Total questions</strong>\n              </td>\n              <td>{stats.totalQuestions}</td>\n            </tr>\n            <tr>\n              <td>\n                <strong>Correct</strong>\n              </td>\n              <td>{stats.totalCorrect}</td>\n            </tr>\n            <tr>\n              <td>\n                <strong>Incorrect</strong>\n              </td>\n              <td>{stats.totalIncorrect}</td>\n            </tr>\n            <tr>\n              <td>\n                <strong>Faster hit</strong>\n              </td>\n              <td>\n                <StatWithRecord stat={stats.fasterHit} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <strong>Slower hit</strong>\n              </td>\n              <td>\n                <StatWithRecord stat={stats.slowerHit} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <strong>Avg time to hit</strong>\n              </td>\n              <td>\n                <StatWithRecord stat={stats.avgHit} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <strong>Total elapsed time</strong>\n              </td>\n              <td>{formatTime(stats.totalTime)}</td>\n            </tr>\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  </section>\n);\n\nfunction StatWithRecord(props) {\n  const { stat } = props;\n\n  return <>\n    {formatTime(stat?.time)}{' '}\n    {stat?.isRecord ? (\n      <strong> RECORD!</strong>\n    ) : (\n      <span>\n        {stat?.lastRecord?.time && <> - Last record: <strong>{formatTime(stat?.lastRecord?.time)}</strong></>}\n        {stat?.lastRecord?.start && ' at ' + new Intl.DateTimeFormat('en-US').format(new Date(stat?.lastRecord?.start))}\n      </span>\n    )}\n  </>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}