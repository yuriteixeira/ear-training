{"version":3,"sources":["engine.js","StartHeader.jsx","QuestionsForm.jsx","ChoiceFeedback.jsx","EndFeedbackWithStats.jsx","App.jsx","serviceWorker.js","index.js"],"names":["audio","NOTES","A","Bb","B","C","Db","D","Eb","E","F","Gb","G","Ab","SCALES","MAJOR","transposedNote","note","octaveFromCentral","noteInHertz","Number","Math","pow","toFixed","initEngine","context","AudioContext","oscilator","createOscillator","connect","destination","start","createIntervalQuestion","tonic","direction","randomNumber","octave","Object","keys","length","createTonic","interval","number","scale","target","intervalSum","reduce","sum","jumps","idx","intervalNote","createInterval","max","floor","random","playIntervalQuestion","intervalQuestion","a","timePerNote","playNote","time","Error","noteFrequency","frequency","setTargetAtTime","currentTime","Promise","resolve","resume","setTimeout","suspend","formatTime","ms","seconds","addQuestion","game","setGameState","newQuestion","questions","unshift","hasPlayed","Date","now","StartHeader","className","onClick","QuestionsForm","answer","question","skipQuestion","end","value","disabled","ChoiceFeedback","isChoiceCorrect","EndFeedbackWithStats","stats","totalQuestions","totalCorrect","totalIncorrect","fasterHit","timeToHit","slowerHit","avgTimeToHit","totalTime","App","useState","setStatsState","gameProps","hasGameStarted","hasGameEnded","undefined","choice","hasMadeChoice","getGameProps","console","debug","gameState","resetGame","newGame","element","defaults","sumTimeToHit","pop","gameStats","acc","date","collectStats","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"wKAMIA,E,6EAESC,G,MAAQ,CACnBC,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,GAAI,EACJC,EAAG,EACHC,EAAG,EACHC,GAAI,EACJC,EAAG,GACHC,GAAI,KAGOC,EAAS,CACpBC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAGrB,SAASC,EAAeC,GAA8B,IAAxBC,EAAuB,uDAAH,EACvD,OAAOD,EAA4B,GAApBC,EAUV,SAASC,EAAYF,GAC1B,OAAOG,QAAiC,IAAzBC,KAAKC,IAAI,EAAGL,EAAO,KAAWM,QAAQ,IAGhD,SAASC,IACd,IAAMC,EAAU,IAAIC,aACdC,EAAYF,EAAQG,mBAC1BD,EAAUE,QAAQJ,EAAQK,aAC1BH,EAAUI,MAAM,GAEhB/B,EAAQ,CACNyB,UAASE,aAIN,SAASK,IACd,IAgBMC,EAhBc,WAClB,IAAMC,EAAcC,EAAa,GAAK,GAAK,EACrCC,EAASD,EAAa,GAAKD,EAGjC,MAAO,CAAEjB,KADID,EADMmB,EAAaE,OAAOC,KAAKrC,GAAOsC,OAAS,GACpBH,GACzBA,UAWHI,GAEd,MAAO,CAAEP,QAAOQ,SAVO,SAACR,GACtB,IAAMC,EAAcC,EAAa,GAAK,GAAK,EACrCC,EAASD,EAAa,GAAKD,EAC3BQ,EAASP,EAAa,GAE5B,MAAO,CAAEO,SAAQzB,KADJD,EAnCV,SAAsByB,EAAUxB,GAA6B,IAAvB0B,EAAsB,uDAAd7B,EAAOC,MACpD6B,EAASH,EAAW,EAC1B,GAAIG,EAAS,EAAG,OAAO3B,EACvB,IAAM4B,EAAcF,EAAMG,QAAO,SAACC,EAAKC,EAAOC,GAAb,OAAqBA,EAAML,EAASG,EAAMA,EAAMC,IAAO,GACxF,OAAO/B,EAAO4B,EA+BgBK,CAAaR,EAAQT,EAAMhB,MAAOmB,GACvCA,UAIRe,CAAelB,IAIlC,SAASE,EAAaiB,GACpB,OAAO/B,KAAKgC,MAAMhC,KAAKiC,SAAWjC,KAAKgC,MAAMD,EAAM,IAG9C,SAAeG,EAAtB,kC,4CAAO,WAAoCC,GAApC,+BAAAC,EAAA,6DAAsDC,EAAtD,+BAAoE,IACjEzB,EAAoBuB,EAApBvB,MAAOQ,EAAae,EAAbf,SADV,SAECkB,EAAS1B,EAAMhB,KAAMyC,GAFtB,uBAGCC,EAASlB,EAASxB,KAAMyC,GAHzB,4C,sBAMA,SAASC,EAAS1C,GAAmB,IAAb2C,EAAY,uDAAL,IACpC,IAAK5D,EAAMyB,UAAYzB,EAAM2B,UAAW,MAAM,IAAIkC,MAAM,iCAExD,IAAMC,EAAgB3C,EAAYF,GAGlC,OAFAjB,EAAM2B,UAAUoC,UAAUC,gBAAgBF,EAAe9D,EAAMyB,QAAQwC,YAAa,GAE7E,IAAIC,SAAQ,SAAAC,GACjBnE,EAAMyB,QAAQ2C,SAEdC,YAAW,WACTrE,EAAMyB,QAAQ6C,UACdH,MACCP,MA+CA,SAASW,EAAWC,GACzB,IAAKA,EAAI,MAAO,MAChB,IAAMC,GAAWD,EAAK,KAAMjD,QAAQ,GACpC,MAAM,GAAN,OAAUkD,EAAV,KAeK,SAAeC,EAAtB,oC,4CAAO,WAA2BC,EAAMC,GAAjC,eAAAnB,EAAA,6DACCoB,EAAc7C,IACpB2C,EAAKG,UAAUC,QAAQF,GACvBD,EAAa,eAAID,IAHZ,SAKCpB,EAAqBoB,EAAKG,UAAU,IALrC,OAOLH,EAAKG,UAAU,GAAGE,WAAY,EAC9BL,EAAKG,UAAU,GAAG/C,MAAQkD,KAAKC,MAC/BN,EAAa,eAAID,IATZ,4C,sBChKA,IAAMQ,EAAc,SAAC,GAAD,IAAEpD,EAAF,EAAEA,MAAF,OACzB,6BAASqD,UAAU,SAEjB,4DACA,4BAAQC,QAAStD,GAAjB,qBCHSuD,EAAgB,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,SAAUC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,IAAlC,OAC3B,6BAASN,UAAU,YACjB,yDAEA,6BAASA,UAAU,UACjB,4BAAQO,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,KACA,4BAAQW,MAAO,EAAGN,QAASE,EAAQK,UAAWJ,EAASR,WAAvD,OAGF,6BAASI,UAAU,iBACjB,4BAAQC,QAAS,kBAAM9B,EAAqBiC,IAAWI,UAAWJ,EAASR,WAA3E,WAGA,4BAAQK,QAASI,EAAcG,UAAWJ,EAASR,WAAnD,SAGA,4BAAQK,QAASK,EAAKE,UAAWJ,EAASR,WAA1C,kCCvBOa,EAAiB,SAAC,GAAD,IAAEC,EAAF,EAAEA,gBAAF,OAC5B,6BAASV,UAAU,UACjB,2BACGU,EAAkB,wBAAgB,6BAGrC,2BACE,+DCNOC,EAAuB,SAAC,GAAD,QAAEC,EAAF,EAAEA,MAAF,OAClC,6BAASZ,UAAU,OACjB,8CAECY,EAAMC,eAAiB,GACtB,oCACE,6BAAK,qDAAmCD,EAAMC,eAC9C,6BAAK,6CAA2BD,EAAME,aACtC,6BAAK,+CAA6BF,EAAMG,eACxC,6BAAK,gDAA8B5B,EAAU,UAACyB,EAAMI,iBAAP,aAAC,EAAiBC,WAC/D,6BAAK,gDAA8B9B,EAAU,UAACyB,EAAMM,iBAAP,aAAC,EAAiBD,WAC/D,6BAAK,qDAAmC9B,EAAWyB,EAAMO,cACzD,6BAAK,wDAAsChC,EAAWyB,EAAMQ,cC0ErDC,MA5Ef,WAAgB,IAAD,EACgBC,mBAAS,IADzB,mBACN/B,EADM,KACAC,EADA,OAEkB8B,mBAAS,IAF3B,mBAENV,EAFM,KAECW,EAFD,KAGPC,ELsID,SAAsBjC,GAAO,IAAD,EAC3BkC,IAAmBlC,EAAK5C,MACxB+E,IAAiBnC,EAAKe,IAEtBZ,EAAYH,EAAKG,UACjBU,EAAYV,GAAaA,EAAUvC,OAAS,EAAKuC,EAAU,QAAKiC,EAChEC,EAAM,OAAGxB,QAAH,IAAGA,OAAH,EAAGA,EAAUwB,OAGzB,MAAO,CAACH,iBAAgBC,eAAchC,YAAWU,WAAUyB,mBAF1BF,IAAXC,EAEoDlB,gBADlDkB,KAAM,OAAKxB,QAAL,IAAKA,GAAL,UAAKA,EAAU/C,gBAAf,aAAK,EAAoBC,SK9IrCwE,CAAavC,GAE/BwC,QAAQC,MAAM,CAACC,UAAW1C,EAAMiC,YAAWZ,UAL9B,IAONa,EAA0ED,EAA1EC,eAAgBC,EAA0DF,EAA1DE,aAActB,EAA4CoB,EAA5CpB,SAAUyB,EAAkCL,EAAlCK,cAAenB,EAAmBc,EAAnBd,gBAwB9D,SAASwB,IACP,MAAO,CACLvF,MAAOkD,KAAKC,MACZJ,UAAW,GACXY,SAAKqB,GAnCI,SAuCEhF,IAvCF,2EAuCb,4BAAA0B,EAAA,6DACEjC,IACM+F,EAAUD,IAFlB,SAGQ5C,EAAY6C,EAAS3C,GAH7B,OAKEuC,QAAQC,MAAM,SALhB,4CAvCa,+BA+CE3B,IA/CF,2EA+Cb,sBAAAhC,EAAA,sEACQiB,EAAYC,EAAMC,GAD1B,OAEEuC,QAAQC,MAAM,iBAFhB,4CA/Ca,sBAoDb,SAAS7B,EAAOiC,GACd7C,EAAKG,UAAU,GAAGkC,OAAS5F,OAAOoG,EAAQ5E,OAAO+C,OACjDhB,EAAKG,UAAU,GAAGY,IAAMT,KAAKC,MAC7BN,EAAa,eAAID,IAEjBN,WAAWoB,EAAc,KAEzB0B,QAAQC,MAAM,UAGhB,SAAS1B,IACPf,EAAKe,IAAMT,KAAKC,MAChB,IAAMc,EL0BH,SAAsBrB,GAC3B,IAAM8C,EAAW,CACfxB,eAAgB,EAChBE,eAAgB,EAChBD,aAAc,EACdwB,aAAc,GAKhB,GADA/C,EAAKG,UAAU6C,MACXhD,EAAKG,UAAUvC,OAAS,EAAG,OAAOkF,EAEtC,IAAMG,EAAYjD,EAAKG,UAAUhC,QAAO,SAAC+E,EAAKrC,GAG5C,GAFAqC,EAAI5B,iBAEAT,EAASwB,SAAWxB,EAAS/C,SAASC,OAExC,OADAmF,EAAI1B,iBACG0B,EAGTA,EAAI3B,eAEJ,IAAMG,EAAYb,EAASE,IAAMF,EAASzD,MAC1C8F,EAAIH,aAAeG,EAAIH,aAAerB,EAEtC,IAAMD,EAAYyB,EAAIzB,WAAayB,EAAIzB,UAAUV,IAAMmC,EAAIzB,UAAUrE,MAC/DuE,EAAYuB,EAAIzB,WAAayB,EAAIvB,UAAUZ,IAAMmC,EAAIvB,UAAUvE,MAKrE,QAHKqE,GAAaC,EAAYD,KAAWyB,EAAIzB,UAAJ,eAAoBZ,EAApB,CAA8Ba,iBAClEC,GAAaD,EAAYC,KAAWuB,EAAIvB,UAAJ,eAAoBd,EAApB,CAA8Ba,eAEhEwB,IACNJ,GAMH,OAJAG,EAAUE,KAAOnD,EAAK5C,MACtB6F,EAAUpB,UAAY7B,EAAKe,IAAMf,EAAK5C,MACtC6F,EAAUrB,aAAeqB,EAAU1B,cAAgB0B,EAAUF,aAAeE,EAAU1B,aAE/E0B,EKhESG,CAAapD,GAC3BgC,EAAcX,GAEdrB,EAAK5C,WAAQgF,EACbnC,EAAa,eAAID,IAEjBwC,QAAQC,MAAM,OAGhB,OA9DI,yBAAKhC,UAAU,QACXyB,GACA,kBAAC,EAAgB,CAAC9E,UAGnB8E,IAAmBI,GAClB,kBAAC,EAAkB,CAAC1B,SAAQC,WAAUC,eAAcC,QAGrDmB,GAAkBI,GACjB,kBAAC,EAAmB,CAACnB,oBAGtBgB,GACC,kBAAC,EAAyB,CAACd,YC1BjBgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9B,QAAQ8B,MAAMA,EAAMC,a","file":"static/js/main.760cd77c.chunk.js","sourcesContent":["/*\n * References:\n * - https://medium.com/swinginc/playing-with-midi-in-javascript-b6999f2913c3\n * - https://calculla.com/calculators/table/note_frequencies\n */\n\nlet audio;\n\nexport const NOTES = {\n  A: 0,\n  Bb: 1,\n  B: 2,\n  C: 3,\n  Db: 4,\n  D: 5,\n  Eb: 6,\n  E: 7,\n  F: 8,\n  Gb: 9,\n  G: 10,\n  Ab: 11,\n};\n\nexport const SCALES = {\n  MAJOR: [2, 2, 1, 2, 2, 2, 1],\n}\n\nexport function transposedNote(note, octaveFromCentral = 0) {\n  return note + (octaveFromCentral * 12);\n}\n\nexport function intervalNote(interval, note, scale = SCALES.MAJOR) {\n  const target = interval - 1;\n  if (target < 0) return note;\n  const intervalSum = scale.reduce((sum, jumps, idx) => idx > target ? sum : sum + jumps, 0);\n  return note + intervalSum;\n}\n\nexport function noteInHertz(note) {\n  return Number((Math.pow(2, note / 12) * 440).toFixed(2));\n}\n\nexport function initEngine() {\n  const context = new AudioContext();\n  const oscilator = context.createOscillator();\n  oscilator.connect(context.destination);\n  oscilator.start(0);\n\n  audio = {\n    context, oscilator\n  }\n}\n\nexport function createIntervalQuestion() {\n  const createTonic = () => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(2) * direction;\n    const noteNumber = randomNumber(Object.keys(NOTES).length - 1);\n    const note = transposedNote(noteNumber, octave);\n    return { note, octave };\n  };\n\n  const createInterval = (tonic) => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(2) * direction;\n    const number = randomNumber(7);\n    const note = transposedNote(intervalNote(number, tonic.note), octave);\n    return { number, note, octave };\n  };\n\n  const tonic = createTonic();\n  const interval = createInterval(tonic);\n  return { tonic, interval };\n}\n\nfunction randomNumber(max) {\n  return Math.floor(Math.random() * Math.floor(max + 1));\n}\n\nexport async function playIntervalQuestion(intervalQuestion, timePerNote = 500) {\n  const { tonic, interval } = intervalQuestion;\n  await playNote(tonic.note, timePerNote);\n  await playNote(interval.note, timePerNote);\n}\n\nexport function playNote(note, time = 500) {\n  if (!audio.context || !audio.oscilator) throw new Error('Audio engine not initialised.');\n\n  const noteFrequency = noteInHertz(note);\n  audio.oscilator.frequency.setTargetAtTime(noteFrequency, audio.context.currentTime, 0);\n\n  return new Promise(resolve => {\n    audio.context.resume();\n\n    setTimeout(() => {\n      audio.context.suspend();\n      resolve();\n    }, time)\n  })\n}\n\n// TODO: Tests on all new functions below\n\nexport function collectStats(game) {\n  const defaults = {\n    totalQuestions: 0,\n    totalIncorrect: 0,\n    totalCorrect: 0,\n    sumTimeToHit: 0,\n  };\n\n  // The last one wasn't answered, so it doesn't count\n  game.questions.pop();\n  if (game.questions.length < 1) return defaults;\n\n  const gameStats = game.questions.reduce((acc, question) => {\n    acc.totalQuestions++;\n\n    if (question.choice !== question.interval.number) {\n      acc.totalIncorrect++;\n      return acc;\n    }\n\n    acc.totalCorrect++;\n\n    const timeToHit = question.end - question.start;\n    acc.sumTimeToHit = acc.sumTimeToHit + timeToHit;\n\n    const fasterHit = acc.fasterHit && acc.fasterHit.end - acc.fasterHit.start;\n    const slowerHit = acc.fasterHit && acc.slowerHit.end - acc.slowerHit.start;\n\n    if (!fasterHit || timeToHit < fasterHit) acc.fasterHit = {...question, timeToHit};\n    if (!slowerHit || timeToHit > slowerHit) acc.slowerHit = {...question, timeToHit};\n\n    return acc;\n  }, defaults);\n\n  gameStats.date = game.start;\n  gameStats.totalTime = game.end - game.start;\n  gameStats.avgTimeToHit = gameStats.totalCorrect && gameStats.sumTimeToHit / gameStats.totalCorrect;\n\n  return gameStats;\n}\n\nexport function formatTime(ms) {\n  if (!ms) return '???';\n  const seconds = (ms / 1000).toFixed(2);\n  return `${seconds}s`;\n}\n\nexport function getGameProps(game) {\n  const hasGameStarted = !!game.start;\n  const hasGameEnded = !!game.end;\n\n  const questions = game.questions;\n  const question = (questions && questions.length > 0) ? questions[0] : undefined;\n  const choice = question?.choice;\n  const hasMadeChoice = choice !== undefined;\n  const isChoiceCorrect = choice === question?.interval?.number;\n  return {hasGameStarted, hasGameEnded, questions, question, hasMadeChoice, isChoiceCorrect};\n}\n\nexport async function addQuestion(game, setGameState) {\n  const newQuestion = createIntervalQuestion();\n  game.questions.unshift(newQuestion);\n  setGameState({...game});\n\n  await playIntervalQuestion(game.questions[0]);\n\n  game.questions[0].hasPlayed = true;\n  game.questions[0].start = Date.now();\n  setGameState({...game});\n}\n","import React from 'react';\n\nexport const StartHeader = ({start}) => (\n  <section className=\"start\">\n    {/* eslint-disable-next-line */}\n    <header>Ear Trainer 🎼</header>\n    <button onClick={start}>Press to START!</button>\n  </section>\n);\n","import {playIntervalQuestion} from \"./engine\";\nimport React from \"react\";\n\nexport const QuestionsForm = ({answer, question, skipQuestion, end}) => (\n  <section className=\"question\">\n    <header>What is the interval?</header>\n\n    <section className=\"choice\">\n      <button value={0} onClick={answer} disabled={!question.hasPlayed}>1</button>\n      <button value={1} onClick={answer} disabled={!question.hasPlayed}>2</button>\n      <button value={2} onClick={answer} disabled={!question.hasPlayed}>3</button>\n      <button value={3} onClick={answer} disabled={!question.hasPlayed}>4</button>\n      <button value={4} onClick={answer} disabled={!question.hasPlayed}>5</button>\n      <button value={5} onClick={answer} disabled={!question.hasPlayed}>6</button>\n      <button value={6} onClick={answer} disabled={!question.hasPlayed}>7</button>\n      <button value={7} onClick={answer} disabled={!question.hasPlayed}>+1</button>\n    </section>\n\n    <section className=\"other-actions\">\n      <button onClick={() => playIntervalQuestion(question)} disabled={!question.hasPlayed}>\n        Re-play\n      </button>\n      <button onClick={skipQuestion} disabled={!question.hasPlayed}>\n        Next!\n      </button>\n      <button onClick={end} disabled={!question.hasPlayed}>\n        Enough! Show how well I did\n      </button>\n    </section>\n  </section>\n);\n","import React from \"react\";\n\nexport const ChoiceFeedback = ({isChoiceCorrect}) => (\n  <section className=\"choice\">\n    <p>\n      {isChoiceCorrect ? 'CORRECT! 🎉' : 'Incorrect... 😨'}\n    </p>\n\n    <p>\n      <strong>But what about this one?</strong>\n    </p>\n  </section>\n);\n","import {formatTime} from \"./engine\";\nimport React from \"react\";\n\nexport const EndFeedbackWithStats = ({stats}) => (\n  <section className=\"end\">\n    <header>THE END...</header>\n\n    {stats.totalQuestions > 0 &&\n      <>\n        <br/><strong>Total questions: </strong>{stats.totalQuestions}\n        <br/><strong>Correct: </strong>{stats.totalCorrect}\n        <br/><strong>Incorrect: </strong>{stats.totalIncorrect}\n        <br/><strong>Faster hit: </strong>{formatTime(stats.fasterHit?.timeToHit)}\n        <br/><strong>Slower hit: </strong>{formatTime(stats.slowerHit?.timeToHit)}\n        <br/><strong>Avg time to hit: </strong>{formatTime(stats.avgTimeToHit)}\n        <br/><strong>Total elapsed time: </strong>{formatTime(stats.totalTime)}\n      </>\n    }\n  </section>\n);\n","import React, {useState} from 'react';\nimport './App.css';\nimport {\n  addQuestion,\n  collectStats,\n  getGameProps,\n  initEngine,\n} from './engine.js'\nimport {StartHeader} from \"./StartHeader\";\nimport {QuestionsForm} from \"./QuestionsForm\";\nimport {ChoiceFeedback} from \"./ChoiceFeedback\";\nimport {EndFeedbackWithStats} from \"./EndFeedbackWithStats\";\n\nfunction App() {\n  const [game, setGameState] = useState({});\n  const [stats, setStatsState] = useState({});\n  const gameProps = getGameProps(game);\n\n  console.debug({gameState: game, gameProps, stats});\n\n  const {hasGameStarted, hasGameEnded, question, hasMadeChoice, isChoiceCorrect} = gameProps;\n\n  function render() {\n    return (\n      <div className=\"app\">\n        {!hasGameStarted &&\n          <StartHeader {...{start}} />\n        }\n\n        {hasGameStarted && !hasMadeChoice &&\n          <QuestionsForm {...{answer, question, skipQuestion, end}} />\n        }\n\n        {hasGameStarted && hasMadeChoice &&\n          <ChoiceFeedback {...{isChoiceCorrect}} />\n        }\n\n        {hasGameEnded &&\n          <EndFeedbackWithStats {...{stats}} />\n        }\n      </div>\n    );\n  }\n\n  function resetGame() {\n    return {\n      start: Date.now(),\n      questions: [],\n      end: undefined,\n    }\n  }\n\n  async function start() {\n    initEngine();\n    const newGame = resetGame();\n    await addQuestion(newGame, setGameState);\n\n    console.debug('START');\n  }\n\n  async function skipQuestion() {\n    await addQuestion(game, setGameState);\n    console.debug('SKIP QUESTION');\n  }\n\n  function answer(element) {\n    game.questions[0].choice = Number(element.target.value);\n    game.questions[0].end = Date.now();\n    setGameState({...game});\n\n    setTimeout(skipQuestion, 2000);\n\n    console.debug('ANSWER');\n  }\n\n  function end() {\n    game.end = Date.now();\n    const stats = collectStats(game);\n    setStatsState(stats);\n\n    game.start = undefined;\n    setGameState({...game});\n\n    console.debug('END');\n  }\n\n  return render();\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}