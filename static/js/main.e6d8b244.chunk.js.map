{"version":3,"sources":["engine.js","StartHeader.jsx","App.jsx","QuestionsForm.jsx","ChoiceFeedback.jsx","EndFeedbackWithStats.jsx","serviceWorker.js","index.js"],"names":["audio","SCALES","MAJOR","transposedNote","note","octaveFromCentral","initEngine","AudioContext","window","webkitAudioContext","context","oscilator","createOscillator","type","connect","destination","start","alert","createIntervalQuestion","tonic","direction","randomNumber","octave","createTonic","interval","number","scale","target","intervalSum","reduce","sum","jumps","idx","intervalNote","createInterval","max","Math","floor","random","playIntervalQuestion","intervalQuestion","a","timePerNote","playNote","time","Error","noteFrequency","Number","pow","toFixed","noteInHertz","frequency","setTargetAtTime","currentTime","Promise","resolve","resume","setTimeout","suspend","collectStats","game","defaults","totalQuestions","totalIncorrect","totalCorrect","sumTimeToHit","date","totalTime","end","console","debug","questions","length","stats","reverse","savedStats","JSON","parse","localStorage","getItem","historicalStats","historical","acc","stat","avgHit","fasterHit","gameStats","question","choice","slowerHit","setItem","stringify","isRecord","lastRecord","formatTime","ms","seconds","addQuestion","setGameState","newQuestion","unshift","hasPlayed","Date","now","nextQuestionTimeout","StartHeader","className","onClick","QuestionsForm","answer","skipQuestion","value","disabled","ChoiceFeedback","isChoiceCorrect","EndFeedbackWithStats","String","App","useState","setStatsState","gameProps","hasGameStarted","hasGameEnded","undefined","hasMadeChoice","getGameProps","resetGame","newGame","nextQuestion","element","isDuringQuestion","shift","clearTimeout","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e6d8b244.chunk.js","sourcesContent":["/*\n * References:\n * - https://medium.com/swinginc/playing-with-midi-in-javascript-b6999f2913c3\n * - https://calculla.com/calculators/table/note_frequencies\n */\n\nlet audio;\n\nexport const NOTES = {\n  A: 0,\n  Bb: 1,\n  B: 2,\n  C: 3,\n  Db: 4,\n  D: 5,\n  Eb: 6,\n  E: 7,\n  F: 8,\n  Gb: 9,\n  G: 10,\n  Ab: 11,\n};\n\nexport const SCALES = {\n  MAJOR: [2, 2, 1, 2, 2, 2, 1],\n};\n\nexport function transposedNote(note, octaveFromCentral = 0) {\n  return note + octaveFromCentral * 12;\n}\n\nexport function intervalNote(interval, note, scale = SCALES.MAJOR) {\n  // 0 based index - interval ones is internally 0\n  const target = interval - 1;\n\n  // since 0 is the 1st interval, it means it's the same note\n  if (target < 0) return note;\n\n  // find the note given an interval, based in how many steps/jumps are necessary\n  const intervalSum = scale.reduce(\n    (sum, jumps, idx) => (idx > target ? sum : sum + jumps),\n    0\n  );\n  return note + intervalSum;\n}\n\nexport function noteInHertz(note) {\n  return Number((Math.pow(2, note / 12) * 440).toFixed(2));\n}\n\nexport function initEngine() {\n  const AudioContext =\n    window.AudioContext || // Default\n    window.webkitAudioContext || // Safari and old versions of Chrome\n    false;\n\n  if (!AudioContext) {\n    alert('This browser does not support this game');\n    return;\n  }\n\n  const context = new AudioContext();\n  const oscilator = context.createOscillator();\n  oscilator.type = \"triangle\";\n  oscilator.connect(context.destination);\n  oscilator.start(0);\n\n  audio = {\n    context,\n    oscilator,\n  };\n}\n\nexport function createIntervalQuestion() {\n  const createTonic = () => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(1) * direction;\n    const noteNumber = randomNumber(11); // 12 possible notes\n    const note = transposedNote(noteNumber, octave);\n    return { note, octave };\n  };\n\n  const createInterval = (tonic) => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(1) * direction;\n    let number = randomNumber(7); // 8 possible intervals to go from one octave to another\n    const note = transposedNote(intervalNote(number, tonic.note), octave);\n\n    // In case the frequency is the same after transposing, the interval should be the same\n    if (note === tonic.note) {\n      number = 0;\n    }\n\n    return { number, note, octave };\n  };\n\n  const tonic = createTonic();\n  const interval = createInterval(tonic);\n  return { tonic, interval };\n}\n\nfunction randomNumber(max) {\n  return Math.floor(Math.random() * Math.floor(max + 1));\n}\n\nexport async function playIntervalQuestion(\n  intervalQuestion,\n  timePerNote = 750\n) {\n  const { tonic, interval } = intervalQuestion;\n  await playNote(tonic.note, timePerNote);\n  await playNote(interval.note, timePerNote);\n}\n\nfunction playNote(note, time) {\n  if (!audio.context || !audio.oscilator)\n    throw new Error(\"Audio engine not initialised.\");\n\n  const noteFrequency = noteInHertz(note);\n  audio.oscilator.frequency.setTargetAtTime(\n    noteFrequency,\n    audio.context.currentTime,\n    0\n  );\n\n  return new Promise((resolve) => {\n    audio.context.resume();\n\n    setTimeout(() => {\n      audio.context.suspend();\n      resolve();\n    }, time);\n  });\n}\n\n// TODO: Tests on all new functions below\n\nexport function collectStats(game) {\n  const defaults = {\n    totalQuestions: 0,\n    totalIncorrect: 0,\n    totalCorrect: 0,\n    sumTimeToHit: 0,\n    date: game.start,\n    totalTime: game.end - game.start,\n  };\n\n  console.debug({ game });\n  if (game.questions.length < 1) return defaults;\n\n  // We need to revert the array before collecting stats (we\n  // stacked items on top, so we could easily access the last\n  // inserted question through index 0)\n  const questions = game.questions.reverse();\n\n  const savedStats = JSON.parse(localStorage.getItem(\"stats\")) || [];\n\n  const historicalStats = collectHistoricalStats(savedStats);\n\n  const gameStats = questions.reduce((acc, question) => {\n    acc.totalQuestions++;\n\n    if (question.choice !== question.interval.number) {\n      acc.totalIncorrect++;\n      return acc;\n    }\n\n    acc.totalCorrect++;\n\n    const time = question.end - question.start;\n    acc.sumTimeToHit = acc.sumTimeToHit + time;\n\n    const fasterHit = acc.fasterHit && acc.fasterHit.end - acc.fasterHit.start;\n    const slowerHit = acc.fasterHit && acc.slowerHit.end - acc.slowerHit.start;\n\n    if (!fasterHit || time < fasterHit) acc.fasterHit = { ...question, time };\n\n    if (!slowerHit || time > slowerHit) acc.slowerHit = { ...question, time };\n\n    return acc;\n  }, defaults);\n\n  gameStats.avgHit = {\n    time:\n      gameStats.totalCorrect && gameStats.sumTimeToHit / gameStats.totalCorrect,\n  };\n  localStorage.setItem(\"stats\", JSON.stringify([...savedStats, gameStats]));\n\n  // Decorate with historical records\n  console.debug({ gameStats });\n  gameStats.fasterHit.isRecord =\n    gameStats.fasterHit.time < historicalStats.fasterHit?.time;\n  gameStats.fasterHit.lastRecord = historicalStats.fasterHit;\n  gameStats.slowerHit.isRecord =\n    gameStats.slowerHit.time < historicalStats.slowerHit?.time;\n  gameStats.slowerHit.lastRecord = historicalStats.slowerHit;\n  gameStats.avgHit.isRecord =\n    gameStats.avgHit.time < historicalStats.avgHit?.time;\n\n  return gameStats;\n}\n\nfunction collectHistoricalStats(stats) {\n  console.debug({ historical: stats });\n  return stats.reduce((acc, stat) => {\n    if (stat.avgHit.time > acc.avgHit?.time) acc.avgHit = stat.avgHit;\n    if (stat.fasterHit.time > acc.fasterHit?.time)\n      acc.fasterHit = stat.fasterHit;\n    return acc;\n  }, {});\n}\n\nexport function formatTime(ms) {\n  if (!ms) return \"???\";\n  const seconds = (ms / 1000).toFixed(2);\n  return `${seconds}s`;\n}\n\nexport function getGameProps(game) {\n  const hasGameStarted = !!game.start;\n  const hasGameEnded = !!game.end;\n\n  const questions = game.questions;\n  const question = questions && questions.length > 0 ? questions[0] : undefined;\n  const choice = question?.choice;\n  const hasMadeChoice = choice !== undefined;\n  const isChoiceCorrect = choice === question?.interval?.number;\n  return {\n    hasGameStarted,\n    hasGameEnded,\n    questions,\n    question,\n    hasMadeChoice,\n    isChoiceCorrect,\n  };\n}\n\nexport async function addQuestion(game, setGameState) {\n  const newQuestion = createIntervalQuestion();\n  game.questions.unshift(newQuestion);\n  setGameState({ ...game });\n\n  await playIntervalQuestion(game.questions[0]);\n\n  game.questions[0].hasPlayed = true;\n  game.questions[0].start = Date.now();\n  setGameState({ ...game });\n}\n","import React from 'react';\n\nexport const StartHeader = ({start}) => (\n  <section className=\"start\">\n    {/* eslint-disable-next-line */}\n    <header>Ear Trainer 🎼</header>\n    <button onClick={start}>Press to START!</button>\n  </section>\n);\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport {\n  addQuestion,\n  collectStats,\n  getGameProps,\n  initEngine,\n} from \"./engine.js\";\nimport { StartHeader } from \"./StartHeader\";\nimport { QuestionsForm } from \"./QuestionsForm\";\nimport { ChoiceFeedback } from \"./ChoiceFeedback\";\nimport { EndFeedbackWithStats } from \"./EndFeedbackWithStats\";\n\nlet nextQuestionTimeout;\n\nfunction App() {\n  const [game, setGameState] = useState({});\n  const [stats, setStatsState] = useState({});\n  const gameProps = getGameProps(game);\n\n  console.debug(game.questions && game.questions.length > 0 && game.questions[0]);\n\n  const {\n    hasGameStarted,\n    hasGameEnded,\n    question,\n    hasMadeChoice,\n    isChoiceCorrect,\n  } = gameProps;\n\n  function render() {\n    return (\n      <div className=\"app\">\n        {!hasGameStarted && <StartHeader {...{ start }} />}\n\n        {hasGameStarted && !hasMadeChoice && (\n          <QuestionsForm {...{ answer, question, nextQuestion, end }} />\n        )}\n\n        {hasGameStarted && hasMadeChoice && (\n          <ChoiceFeedback {...{ isChoiceCorrect, question, end }} />\n        )}\n\n        {hasGameEnded && <EndFeedbackWithStats {...{ stats }} />}\n      </div>\n    );\n  }\n\n  function resetGame() {\n    return {\n      start: Date.now(),\n      questions: [],\n      end: undefined,\n    };\n  }\n\n  async function start() {\n    initEngine();\n    const newGame = resetGame();\n    await addQuestion(newGame, setGameState);\n\n    console.debug(\"START\");\n  }\n\n  async function nextQuestion() {\n    await addQuestion(game, setGameState);\n    console.debug(\"SKIP QUESTION\");\n  }\n\n  function answer(element) {\n    game.questions[0].choice = Number(element.target.value);\n    game.questions[0].end = Date.now();\n    setGameState({ ...game });\n\n    nextQuestionTimeout = setTimeout(nextQuestion, 3000);\n\n    console.debug(\"ANSWER\");\n  }\n\n  function end(isDuringQuestion = true) {\n    game.end = Date.now();\n\n    if (isDuringQuestion) {\n      game.questions.shift();\n    } else {\n      clearTimeout(nextQuestionTimeout);\n    }\n\n    const stats = collectStats(game);\n    setStatsState(stats);\n\n    game.start = undefined;\n    setGameState({ ...game });\n\n    console.debug(\"END\");\n  }\n\n  return render();\n}\n\nexport default App;\n","import {playIntervalQuestion} from \"./engine\";\nimport React from \"react\";\n\nexport const QuestionsForm = ({answer, question, skipQuestion, end}) => (\n  <section className=\"question\">\n    <header>What is the interval?</header>\n\n    <section className=\"choice\">\n      <button value={0} onClick={answer} disabled={!question.hasPlayed}>1</button>\n      <button value={1} onClick={answer} disabled={!question.hasPlayed}>2</button>\n      <button value={2} onClick={answer} disabled={!question.hasPlayed}>3</button>\n      <button value={3} onClick={answer} disabled={!question.hasPlayed}>4</button>\n      <button value={4} onClick={answer} disabled={!question.hasPlayed}>5</button>\n      <button value={5} onClick={answer} disabled={!question.hasPlayed}>6</button>\n      <button value={6} onClick={answer} disabled={!question.hasPlayed}>7</button>\n      <button value={7} onClick={answer} disabled={!question.hasPlayed}>8</button>\n    </section>\n\n    <section className=\"other-actions\">\n      <button onClick={() => playIntervalQuestion(question)} disabled={!question.hasPlayed}>\n        Re-play\n      </button>\n\n      <button onClick={skipQuestion} disabled={!question.hasPlayed}>\n        Next!\n      </button>\n\n      <button onClick={end} disabled={!question.hasPlayed}>\n        Enough! Show how well I did\n      </button>\n    </section>\n  </section>\n);\n","import React from \"react\";\n\nexport const ChoiceFeedback = ({ isChoiceCorrect, question, end }) => (\n  <section className=\"choice-feedback\">\n    <p>{isChoiceCorrect ? \"CORRECT! 🎉\" : \"Incorrect... 😨\"}</p>\n\n    {!isChoiceCorrect && (\n      <p>\n        You chose {question.choice + 1} but the write interval is{\" \"}\n        <strong>{question.interval.number + 1}</strong>\n      </p>\n    )}\n\n    <p>\n      <strong>But what about this one?</strong>\n    </p>\n\n    <p>\n      <button onClick={() => end(false)}>\n        No more questions, show me stats\n      </button>\n    </p>\n  </section>\n);\n","import { formatTime } from \"./engine\";\nimport React from \"react\";\n\nexport const EndFeedbackWithStats = ({ stats, historicalStats }) => (\n  <section className=\"end\">\n    <div className=\"stats\">\n      {stats.totalQuestions > 0 && (\n        <>\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Total questions</strong>\n                </td>\n                <td>{stats.totalQuestions}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Correct</strong>\n                </td>\n                <td>{stats.totalCorrect}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Incorrect</strong>\n                </td>\n                <td>{stats.totalIncorrect}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Faster hit</strong>\n                </td>\n                <td>\n                  {formatTime(stats.fasterHit?.time)}{\" \"}\n                  {stats.fasterHit.isRecord ? (\n                    <strong> RECORD!</strong>\n                  ) : (\n                    <span>\n                      (Last record: {stats.fasterHit?.lastRecord?.time || \"???\"}{\" \"}\n                      at {String(new Date(stats.fasterHit?.lastRecord?.start))})\n                    </span>\n                  )}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Slower hit</strong>\n                </td>\n                <td>\n                  {formatTime(stats.slowerHit?.time)}{\" \"}\n                  {stats.slowerHit.isRecord ? (\n                    <strong> RECORD!</strong>\n                  ) : (\n                    <span>\n                      (Last record: {stats.slowerHit?.lastRecord?.time || \"???\"}{\" \"}\n                      at {String(new Date(stats.slowerHit?.lastRecord?.start))})\n                    </span>\n                  )}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Avg time to hit</strong>\n                </td>\n                <td>\n                  {formatTime(stats.avgHit?.time)}{\" \"}\n                  {stats.avgHit.isRecord ? (\n                    <strong> RECORD!</strong>\n                  ) : (\n                    <span>\n                      (Last record: {stats.avgHit?.lastRecord?.time || \"???\"} at{\" \"}\n                      {String(new Date(stats.avgHit?.lastRecord?.start))})\n                    </span>\n                  )}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Total elapsed time</strong>\n                </td>\n                <td>{formatTime(stats.totalTime)}</td>\n              </tr>\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  </section>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}