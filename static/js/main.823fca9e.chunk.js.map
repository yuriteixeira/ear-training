{"version":3,"sources":["lib/synth.js","lib/music.js","lib/game.js","module/StartHeader.jsx","module/App.jsx","module/QuestionsForm.jsx","module/ChoiceFeedback.jsx","module/EndFeedbackWithStats.jsx","serviceWorker.js","index.js"],"names":["context","oscillator","gainNode","SCALES","MAJOR","name","steps","CHROMATIC","getNoteInHertz","note","Number","Math","pow","toFixed","getTransposedNote","octaveFromCentral","getIntervalNote","intervalIndex","scale","intervalSum","reduce","sum","interval","idx","play","value","window","AudioContext","webkitAudioContext","createOscillator","type","createGain","connect","destination","frequency","setValueAtTime","currentTime","gain","start","stop","playNote","time","a","Promise","resolve","setTimeout","addQuestion","game","setGameState","newQuestion","createIntervalQuestion","questions","unshift","playIntervalQuestion","hasPlayed","Date","now","createTonic","direction","randomNumber","octave","createInterval","tonic","indexBeforeAdjustments","length","index","getFrequencyAndPitchAdjustedIntervalNumber","max","floor","random","intervalQuestion","timePerNote","collectStats","defaults","totalQuestions","totalIncorrect","totalCorrect","sumTimeToHit","slowerHit","fasterHit","avgHit","date","totalTime","end","reverse","savedStats","JSON","parse","localStorage","getItem","recordStats","acc","stat","gameStats","question","choice","setItem","stringify","historicalStats","isRecord","lastRecord","decorateStatsWithRecords","formatTime","ms","seconds","nextQuestionTimeout","StartHeader","options","setOptions","setScale","element","target","className","onChange","Object","keys","map","key","onClick","QuestionsForm","nextQuestion","answer","disabled","ChoiceFeedback","isChoiceCorrect","chosenInterval","correctInterval","EndFeedbackWithStats","stats","StatWithRecord","props","Intl","DateTimeFormat","format","App","useState","setStatsState","gameProps","hasGameStarted","hasGameEnded","undefined","hasMadeChoice","getGameProps","resetGame","newGame","alert","clearTimeout","isDuringQuestion","shift","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.823fca9e.chunk.js","sourcesContent":["import { getNoteInHertz } from './music';\n\nlet context;\nlet oscillator;\nlet gainNode;\n\nfunction reset() {\n  if (!context) {\n    context = new (window.AudioContext || window.webkitAudioContext)();\n  }\n\n  oscillator = context.createOscillator();\n  oscillator.type = 'triangle';\n  gainNode = context.createGain();\n\n  oscillator.connect(gainNode);\n  gainNode.connect(context.destination);\n}\n\nexport function play(value) {\n  reset();\n\n  oscillator.frequency.setValueAtTime(value, context.currentTime);\n  gainNode.gain.setValueAtTime(1, context.currentTime);\n  oscillator.start();\n}\n\nexport function stop() {\n  gainNode.gain.setValueAtTime(0, context.currentTime);\n  oscillator.stop(context.currentTime);\n}\n\nexport async function playNote(note, time) {\n  play(getNoteInHertz(note));\n\n  return new Promise(resolve => {\n    setTimeout(() => {\n      stop();\n      resolve();\n    }, time);\n  });\n}\n","export const NOTES = {\n  A: 0,\n  Bb: 1,\n  B: 2,\n  C: 3,\n  Db: 4,\n  D: 5,\n  Eb: 6,\n  E: 7,\n  F: 8,\n  Gb: 9,\n  G: 10,\n  Ab: 11,\n};\n\nexport const SCALES = {\n  MAJOR: [\n    { name: '1', steps: 0 },\n    { name: '2', steps: 2 },\n    { name: '3', steps: 2 },\n    { name: '4', steps: 1 },\n    { name: '5', steps: 2 },\n    { name: '6', steps: 2 },\n    { name: '7', steps: 2 },\n    { name: '8', steps: 1 },\n  ],\n\n  CHROMATIC: [\n    { name: '1', steps: 0 },\n    { name: 'b2', steps: 1 },\n    { name: '2', steps: 1 },\n    { name: 'b3', steps: 1 },\n    { name: '3', steps: 1 },\n    { name: '4', steps: 1 },\n    { name: '4#', steps: 1 },\n    { name: '5', steps: 1 },\n    { name: 'b6', steps: 1 },\n    { name: '6', steps: 1 },\n    { name: 'b7', steps: 1 },\n    { name: '7', steps: 1 },\n    { name: '8', steps: 1 },\n  ],\n};\n\nexport function getNoteInHertz(note) {\n  return Number((Math.pow(2, note / 12) * 440).toFixed(2));\n}\n\nexport function getTransposedNote(note, octaveFromCentral = 0) {\n  return note + octaveFromCentral * 12;\n}\n\nexport function getIntervalNote(intervalIndex, note, scale = SCALES.MAJOR) {\n  // since 0 is the 1st interval, it means it's the same note\n  if (intervalIndex === 0) return note;\n\n  // find the note given an interval, based in how many steps/jumps are necessary\n  const intervalSum = scale.reduce((sum, interval, idx) => (idx > intervalIndex ? sum : sum + interval.steps), 0);\n  return note + intervalSum;\n}\n","/*\n * References:\n * - https://medium.com/swinginc/playing-with-midi-in-javascript-b6999f2913c3\n * - https://calculla.com/calculators/table/note_frequencies\n */\n\nimport { getIntervalNote, getTransposedNote, SCALES } from './music';\nimport { playNote } from './synth';\n\nexport function getGameProps(game) {\n  const hasGameStarted = !!game.start;\n  const hasGameEnded = !!game.end;\n\n  const questions = game.questions;\n  const question = questions && questions.length > 0 ? questions[0] : undefined;\n  const choice = question?.choice;\n  const hasMadeChoice = choice !== undefined;\n  const isChoiceCorrect = question && choice === question?.interval?.index;\n  const chosenInterval = game.scale && choice && game.scale[choice];\n  const correctInterval = game.scale && game.scale[question?.interval?.index];\n\n  return {\n    hasGameStarted,\n    hasGameEnded,\n    questions,\n    question,\n    hasMadeChoice,\n    isChoiceCorrect,\n    correctInterval,\n    chosenInterval,\n  };\n}\n\nexport async function addQuestion(game, setGameState) {\n  const newQuestion = createIntervalQuestion(game.scale);\n  game.questions.unshift(newQuestion);\n  setGameState({ ...game });\n\n  await playIntervalQuestion(game.questions[0]);\n\n  game.questions[0].hasPlayed = true;\n  game.questions[0].start = Date.now();\n  setGameState({ ...game });\n}\n\nexport function createIntervalQuestion(scale = SCALES.MAJOR) {\n  const createTonic = () => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(2) * direction;\n    const noteNumber = randomNumber(11); // 12 possible notes\n\n    const note = getTransposedNote(noteNumber, octave);\n\n    return { note };\n  };\n\n  const createInterval = tonic => {\n    const direction = !!randomNumber(1) ? 1 : -1;\n    const octave = randomNumber(1) * direction;\n    const indexBeforeAdjustments = randomNumber(scale.length - 1);\n    const noteWithoutTranspose = getIntervalNote(indexBeforeAdjustments, tonic.note, scale);\n\n    const note = getTransposedNote(noteWithoutTranspose, octave);\n    const index = getFrequencyAndPitchAdjustedIntervalNumber(tonic, note, indexBeforeAdjustments, scale);\n\n    return { note, index };\n  };\n\n  const tonic = createTonic();\n  const interval = createInterval(tonic);\n\n  return { tonic, interval };\n}\n\nfunction randomNumber(max) {\n  return Math.floor(Math.random() * Math.floor(max + 1));\n}\n\nfunction getFrequencyAndPitchAdjustedIntervalNumber(tonic, note, intervalIndex, scale) {\n  const haveNotesSameFrequency = note === tonic.note;\n\n  if (haveNotesSameFrequency) {\n    return 0;\n  }\n\n  const haveNotesDifferentPitch = (note - tonic.note) % 12 !== 0;\n\n  if (haveNotesDifferentPitch) {\n    return intervalIndex;\n  }\n\n  // Different frequencies but same pitch: Measure distance\n  const noteDistance = note - tonic.note;\n\n  // Octave forward\n  if (noteDistance > 0) return scale.length - 1;\n\n  // Octave backwards or same\n  return 0;\n}\n\nexport async function playIntervalQuestion(intervalQuestion, timePerNote = 750) {\n  const { tonic, interval } = intervalQuestion;\n  await playNote(tonic.note, timePerNote);\n  await playNote(interval.note, timePerNote);\n}\n\n// TODO: Tests on all new functions below\n\nexport function collectStats(game) {\n  const defaults = {\n    totalQuestions: 0,\n    totalIncorrect: 0,\n    totalCorrect: 0,\n    sumTimeToHit: 0,\n    slowerHit: {},\n    fasterHit: {},\n    avgHit: {},\n    date: game.start,\n    totalTime: game.end - game.start,\n  };\n\n  if (game.questions.length < 1) return defaults;\n\n  // We need to revert the array before collecting stats (we\n  // stacked items on top, so we could easily access the last\n  // inserted question through index 0)\n  const questions = game.questions.reverse();\n\n  const savedStats = JSON.parse(localStorage.getItem('stats')) || [];\n\n  const recordStats = aggregateRecords(savedStats);\n\n  const gameStats = questions.reduce((acc, question) => {\n    acc.totalQuestions++;\n\n    if (question.choice !== question.interval.index) {\n      acc.totalIncorrect++;\n      return acc;\n    }\n\n    acc.totalCorrect++;\n\n    const time = question.end - question.start;\n    acc.sumTimeToHit = acc.sumTimeToHit + time;\n\n    const fasterHit = acc.fasterHit && acc.fasterHit.end - acc.fasterHit.start;\n    const slowerHit = acc.slowerHit && acc.slowerHit.end - acc.slowerHit.start;\n\n    if (!fasterHit || time < fasterHit) acc.fasterHit = { ...question, time };\n    if (!slowerHit || time > slowerHit) acc.slowerHit = { ...question, time };\n\n    return acc;\n  }, defaults);\n\n  gameStats.avgHit = {\n    time: gameStats.totalCorrect && gameStats.sumTimeToHit / gameStats.totalCorrect,\n    start: game.start,\n  };\n\n  localStorage.setItem('stats', JSON.stringify([...savedStats, gameStats]));\n\n  decorateStatsWithRecords(gameStats, recordStats);\n\n  return gameStats;\n}\n\nfunction aggregateRecords(stats) {\n  return stats.reduce((acc, stat) => {\n    if (!acc.avgHit || stat.avgHit?.time < acc.avgHit?.time) acc.avgHit = stat.avgHit;\n    if (!acc.fasterHit || stat.fasterHit?.time < acc.fasterHit?.time) acc.fasterHit = stat.fasterHit;\n    if (!acc.slowerHit || stat.slowerHit?.time > acc.slowerHit?.time) acc.slowerHit = stat.slowerHit;\n    return acc;\n  }, {});\n}\n\nfunction decorateStatsWithRecords(gameStats, historicalStats) {\n  gameStats.avgHit.isRecord = gameStats.avgHit?.time < historicalStats.avgHit?.time;\n  gameStats.avgHit.lastRecord = historicalStats.avgHit;\n\n  gameStats.fasterHit.isRecord = gameStats.fasterHit?.time < historicalStats.fasterHit?.time;\n  gameStats.fasterHit.lastRecord = historicalStats.fasterHit;\n\n  gameStats.slowerHit.isRecord = gameStats.slowerHit?.time > historicalStats.slowerHit?.time;\n  gameStats.slowerHit.lastRecord = historicalStats.slowerHit;\n}\n\nexport function formatTime(ms) {\n  if (!ms) return '???';\n  const seconds = (ms / 1000).toFixed(2);\n  return `${seconds}s`;\n}\n","import React from 'react';\nimport { SCALES } from '../lib/music';\n\nexport const StartHeader = ({ start, options, setOptions }) => {\n  function render() {\n    return (\n      <section className=\"start\">\n        {/* eslint-disable-next-line */}\n        <header>Ear Trainer 🎼</header>\n\n        <select onChange={setScale}>\n          <option>Choose a scale</option>\n          {Object.keys(SCALES).map(key => (\n            <option key={key} value={key}>{`Scale: ${key}`}</option>\n          ))}\n        </select>\n\n        <button onClick={start}>Press to START!</button>\n      </section>\n    );\n  }\n\n  function setScale(element) {\n    setOptions({\n      ...options,\n      scale: element.target.value,\n    });\n  }\n\n  return render();\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { addQuestion, collectStats, getGameProps } from '../lib/game.js';\nimport { StartHeader } from './StartHeader';\nimport { QuestionsForm } from './QuestionsForm';\nimport { ChoiceFeedback } from './ChoiceFeedback';\nimport { EndFeedbackWithStats } from './EndFeedbackWithStats';\nimport { SCALES } from '../lib/music';\n\nlet nextQuestionTimeout;\n\nfunction App() {\n  const [options, setOptions] = useState({});\n  const [game, setGameState] = useState({});\n  const [stats, setStatsState] = useState({});\n  const gameProps = getGameProps(game);\n\n  const { hasGameStarted, hasGameEnded, question, hasMadeChoice, isChoiceCorrect, chosenInterval, correctInterval } = gameProps;\n\n  function render() {\n    return (\n      <div className=\"app\">\n        {!hasGameStarted && <StartHeader {...{ start, options, setOptions }} />}\n\n        {hasGameStarted && !hasMadeChoice && <QuestionsForm {...{ game, question, nextQuestion, answer, end }} />}\n\n        {hasGameStarted && hasMadeChoice && <ChoiceFeedback {...{ isChoiceCorrect, chosenInterval, correctInterval, nextQuestion, end }} />}\n\n        {hasGameEnded && <EndFeedbackWithStats {...{ stats }} />}\n      </div>\n    );\n  }\n\n  function resetGame() {\n    return {\n      scale: SCALES[options.scale],\n      start: Date.now(),\n      questions: [],\n      end: undefined,\n    };\n  }\n\n  async function start() {\n    const newGame = resetGame();\n\n    if (!newGame.scale) {\n      alert('Choose a scale!');\n      return;\n    }\n\n    await addQuestion(newGame, setGameState);\n  }\n\n  async function nextQuestion() {\n    clearTimeout(nextQuestionTimeout);\n    await addQuestion(game, setGameState);\n  }\n\n  function answer(element) {\n    game.questions[0].choice = Number(element.target.value);\n    game.questions[0].end = Date.now();\n    setGameState({ ...game });\n\n    nextQuestionTimeout = setTimeout(nextQuestion, 3000);\n  }\n\n  function end(isDuringQuestion = true) {\n    clearTimeout(nextQuestionTimeout);\n\n    if (isDuringQuestion) {\n      game.questions.shift();\n    }\n\n    game.end = Date.now();\n    const stats = collectStats(game);\n    setStatsState(stats);\n\n    game.start = undefined;\n    setGameState({ ...game });\n  }\n\n  return render();\n}\n\nexport default App;\n","import { playIntervalQuestion } from '../lib/game';\nimport React from 'react';\n\nexport const QuestionsForm = ({ game, question, nextQuestion, answer, end }) => (\n  <section className=\"question\">\n    <header>What is the interval?</header>\n\n    <section className=\"choice\">\n      {game.scale.map((interval, idx) => (\n        <button key={interval.name} value={idx} onClick={answer} disabled={!question.hasPlayed}>\n          {interval.name}\n        </button>\n      ))}\n    </section>\n\n    <section className=\"other-actions\">\n      <button onClick={() => playIntervalQuestion(question)} disabled={!question.hasPlayed}>\n        Re-play\n      </button>\n\n      <button onClick={nextQuestion} disabled={!question.hasPlayed}>\n        Next!\n      </button>\n\n      <button onClick={end} disabled={!question.hasPlayed}>\n        I'm done... Stats!\n      </button>\n    </section>\n  </section>\n);\n","import React from 'react';\n\nexport const ChoiceFeedback = ({ isChoiceCorrect, chosenInterval, correctInterval, nextQuestion, end }) => (\n  <section className=\"choice-feedback\">\n    <p>{isChoiceCorrect ? 'CORRECT! 🎉' : 'Incorrect... 😨'}</p>\n\n    {!isChoiceCorrect && (\n      <p>\n        You chose {chosenInterval?.name} but the right interval is <strong>{correctInterval?.name}</strong>\n      </p>\n    )}\n\n    <p>\n      <strong>But what about this one?</strong>\n    </p>\n\n    <p>\n      <button onClick={nextQuestion}>Next, pls!</button>\n    </p>\n\n    <p>\n      <button onClick={() => end(false)}>I'm done... Stats!</button>\n    </p>\n  </section>\n);\n","import { formatTime } from '../lib/game';\nimport React from 'react';\n\nexport const EndFeedbackWithStats = ({ stats }) => (\n  <section className=\"end\">\n    <div className=\"stats\">\n      {stats.totalQuestions > 0 && (\n        <>\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <strong>Total questions</strong>\n                </td>\n                <td>{stats.totalQuestions}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Correct</strong>\n                </td>\n                <td>{stats.totalCorrect}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Incorrect</strong>\n                </td>\n                <td>{stats.totalIncorrect}</td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Faster hit</strong>\n                </td>\n                <td>\n                  <StatWithRecord stat={stats.fasterHit} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Slower hit</strong>\n                </td>\n                <td>\n                  <StatWithRecord stat={stats.slowerHit} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Avg time to hit</strong>\n                </td>\n                <td>\n                  <StatWithRecord stat={stats.avgHit} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <strong>Total elapsed time</strong>\n                </td>\n                <td>{formatTime(stats.totalTime)}</td>\n              </tr>\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  </section>\n);\n\nfunction StatWithRecord(props) {\n  const { stat } = props;\n\n  return (\n    <>\n      {formatTime(stat?.time)}{' '}\n      {stat?.isRecord ? (\n        <strong> RECORD!</strong>\n      ) : (\n        <span>\n          {stat?.lastRecord?.time && (\n            <>\n              {' '}\n              - Last record: <strong>{formatTime(stat?.lastRecord?.time)}</strong>\n            </>\n          )}\n          {stat?.lastRecord?.start && ' at ' + new Intl.DateTimeFormat('en-US').format(new Date(stat?.lastRecord?.start))}\n        </span>\n      )}\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log('This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA');\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log('New content is available and will be used when all ' + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.');\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './module/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}